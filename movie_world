class Customer:
    def __init__(self, name, age, id):
        self.name = name
        self.age = age
        self.id = id
        self.rented_dvds = []

    def __repr__(self):
        name_of_rented_dvds = [dvd.name for dvd in self.rented_dvds]
        return f"{self.id}: {self.name} of age {self.age} has {len(self.rented_dvds)} rented DVD's ({', '.join(name_of_rented_dvds)})"

class DVD:
    def __init__(self, name, id, creation_year, creation_month: str, age_restriction):
        self.name = name
        self.id = id
        self.creation_year = creation_year
        self.creation_month = creation_month
        self.age_restriction = age_restriction
        self.is_rented = False

    @classmethod
    def from_date(cls, id, name, date: str, age_restriction):
        date_split = date.split(".")
        year = int(date_split[2])
        month = int(date_split[1])
        month_num_to_str = {1: "January",
                            2: "February",
                            3: "March",
                            4: "April",
                            5: "May",
                            6: "June",
                            7: "July",
                            8: "August",
                            9: "September",
                            10: "October",
                            11: "November",
                            12: "December"}
        month_in_str = month_num_to_str[month]
        return cls(name, id, year, month_in_str, age_restriction)

    def __repr__(self):
        dvd_status = "rented" if self.is_rented else "not rented"
        return f"{self.id}: {self.name} ({self.creation_month} {self.creation_year}) has age restriction {self.age_restriction}. Status: {dvd_status}"
